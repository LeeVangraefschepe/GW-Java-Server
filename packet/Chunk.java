// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Chunk.proto

package packet;

public final class Chunk {
  private Chunk() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ChunkDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:packet.ChunkData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 packetId = 1;</code>
     * @return The packetId.
     */
    int getPacketId();

    /**
     * <code>.packet.ChunkData.Vector2 position = 2;</code>
     * @return Whether the position field is set.
     */
    boolean hasPosition();
    /**
     * <code>.packet.ChunkData.Vector2 position = 2;</code>
     * @return The position.
     */
    packet.Chunk.ChunkData.Vector2 getPosition();
    /**
     * <code>.packet.ChunkData.Vector2 position = 2;</code>
     */
    packet.Chunk.ChunkData.Vector2OrBuilder getPositionOrBuilder();

    /**
     * <code>int32 biome = 3;</code>
     * @return The biome.
     */
    int getBiome();

    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    java.util.List<packet.Chunk.ChunkData.ChunkRow> 
        getChunkList();
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    packet.Chunk.ChunkData.ChunkRow getChunk(int index);
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    int getChunkCount();
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    java.util.List<? extends packet.Chunk.ChunkData.ChunkRowOrBuilder> 
        getChunkOrBuilderList();
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    packet.Chunk.ChunkData.ChunkRowOrBuilder getChunkOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code packet.ChunkData}
   */
  public static final class ChunkData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:packet.ChunkData)
      ChunkDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChunkData.newBuilder() to construct.
    private ChunkData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChunkData() {
      chunk_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChunkData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChunkData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              packetId_ = input.readInt32();
              break;
            }
            case 18: {
              packet.Chunk.ChunkData.Vector2.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(packet.Chunk.ChunkData.Vector2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              biome_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                chunk_ = new java.util.ArrayList<packet.Chunk.ChunkData.ChunkRow>();
                mutable_bitField0_ |= 0x00000001;
              }
              chunk_.add(
                  input.readMessage(packet.Chunk.ChunkData.ChunkRow.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          chunk_ = java.util.Collections.unmodifiableList(chunk_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return packet.Chunk.internal_static_packet_ChunkData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return packet.Chunk.internal_static_packet_ChunkData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              packet.Chunk.ChunkData.class, packet.Chunk.ChunkData.Builder.class);
    }

    public interface Vector2OrBuilder extends
        // @@protoc_insertion_point(interface_extends:packet.ChunkData.Vector2)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 x = 1;</code>
       * @return The x.
       */
      int getX();

      /**
       * <code>int32 y = 2;</code>
       * @return The y.
       */
      int getY();
    }
    /**
     * Protobuf type {@code packet.ChunkData.Vector2}
     */
    public static final class Vector2 extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:packet.ChunkData.Vector2)
        Vector2OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Vector2.newBuilder() to construct.
      private Vector2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Vector2() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Vector2();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Vector2(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                x_ = input.readInt32();
                break;
              }
              case 16: {

                y_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.Chunk.internal_static_packet_ChunkData_Vector2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.Chunk.internal_static_packet_ChunkData_Vector2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.Chunk.ChunkData.Vector2.class, packet.Chunk.ChunkData.Vector2.Builder.class);
      }

      public static final int X_FIELD_NUMBER = 1;
      private int x_;
      /**
       * <code>int32 x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public int getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 2;
      private int y_;
      /**
       * <code>int32 y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public int getY() {
        return y_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (x_ != 0) {
          output.writeInt32(1, x_);
        }
        if (y_ != 0) {
          output.writeInt32(2, y_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (x_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, x_);
        }
        if (y_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, y_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof packet.Chunk.ChunkData.Vector2)) {
          return super.equals(obj);
        }
        packet.Chunk.ChunkData.Vector2 other = (packet.Chunk.ChunkData.Vector2) obj;

        if (getX()
            != other.getX()) return false;
        if (getY()
            != other.getY()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX();
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.Vector2 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.Vector2 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.Vector2 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(packet.Chunk.ChunkData.Vector2 prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code packet.ChunkData.Vector2}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:packet.ChunkData.Vector2)
          packet.Chunk.ChunkData.Vector2OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return packet.Chunk.internal_static_packet_ChunkData_Vector2_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return packet.Chunk.internal_static_packet_ChunkData_Vector2_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  packet.Chunk.ChunkData.Vector2.class, packet.Chunk.ChunkData.Vector2.Builder.class);
        }

        // Construct using packet.Chunk.ChunkData.Vector2.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          x_ = 0;

          y_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return packet.Chunk.internal_static_packet_ChunkData_Vector2_descriptor;
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.Vector2 getDefaultInstanceForType() {
          return packet.Chunk.ChunkData.Vector2.getDefaultInstance();
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.Vector2 build() {
          packet.Chunk.ChunkData.Vector2 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.Vector2 buildPartial() {
          packet.Chunk.ChunkData.Vector2 result = new packet.Chunk.ChunkData.Vector2(this);
          result.x_ = x_;
          result.y_ = y_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof packet.Chunk.ChunkData.Vector2) {
            return mergeFrom((packet.Chunk.ChunkData.Vector2)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(packet.Chunk.ChunkData.Vector2 other) {
          if (other == packet.Chunk.ChunkData.Vector2.getDefaultInstance()) return this;
          if (other.getX() != 0) {
            setX(other.getX());
          }
          if (other.getY() != 0) {
            setY(other.getY());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          packet.Chunk.ChunkData.Vector2 parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (packet.Chunk.ChunkData.Vector2) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int x_ ;
        /**
         * <code>int32 x = 1;</code>
         * @return The x.
         */
        @java.lang.Override
        public int getX() {
          return x_;
        }
        /**
         * <code>int32 x = 1;</code>
         * @param value The x to set.
         * @return This builder for chaining.
         */
        public Builder setX(int value) {
          
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 x = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearX() {
          
          x_ = 0;
          onChanged();
          return this;
        }

        private int y_ ;
        /**
         * <code>int32 y = 2;</code>
         * @return The y.
         */
        @java.lang.Override
        public int getY() {
          return y_;
        }
        /**
         * <code>int32 y = 2;</code>
         * @param value The y to set.
         * @return This builder for chaining.
         */
        public Builder setY(int value) {
          
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 y = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearY() {
          
          y_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:packet.ChunkData.Vector2)
      }

      // @@protoc_insertion_point(class_scope:packet.ChunkData.Vector2)
      private static final packet.Chunk.ChunkData.Vector2 DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new packet.Chunk.ChunkData.Vector2();
      }

      public static packet.Chunk.ChunkData.Vector2 getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Vector2>
          PARSER = new com.google.protobuf.AbstractParser<Vector2>() {
        @java.lang.Override
        public Vector2 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Vector2(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Vector2> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Vector2> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public packet.Chunk.ChunkData.Vector2 getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ChunkSliceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:packet.ChunkData.ChunkSlice)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated int32 values = 1;</code>
       * @return A list containing the values.
       */
      java.util.List<java.lang.Integer> getValuesList();
      /**
       * <code>repeated int32 values = 1;</code>
       * @return The count of values.
       */
      int getValuesCount();
      /**
       * <code>repeated int32 values = 1;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      int getValues(int index);
    }
    /**
     * Protobuf type {@code packet.ChunkData.ChunkSlice}
     */
    public static final class ChunkSlice extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:packet.ChunkData.ChunkSlice)
        ChunkSliceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ChunkSlice.newBuilder() to construct.
      private ChunkSlice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ChunkSlice() {
        values_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ChunkSlice();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ChunkSlice(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  values_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                values_.addInt(input.readInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                  values_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  values_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            values_.makeImmutable(); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.Chunk.internal_static_packet_ChunkData_ChunkSlice_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.Chunk.internal_static_packet_ChunkData_ChunkSlice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.Chunk.ChunkData.ChunkSlice.class, packet.Chunk.ChunkData.ChunkSlice.Builder.class);
      }

      public static final int VALUES_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.IntList values_;
      /**
       * <code>repeated int32 values = 1;</code>
       * @return A list containing the values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getValuesList() {
        return values_;
      }
      /**
       * <code>repeated int32 values = 1;</code>
       * @return The count of values.
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated int32 values = 1;</code>
       * @param index The index of the element to return.
       * @return The values at the given index.
       */
      public int getValues(int index) {
        return values_.getInt(index);
      }
      private int valuesMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getValuesList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(valuesMemoizedSerializedSize);
        }
        for (int i = 0; i < values_.size(); i++) {
          output.writeInt32NoTag(values_.getInt(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(values_.getInt(i));
          }
          size += dataSize;
          if (!getValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          valuesMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof packet.Chunk.ChunkData.ChunkSlice)) {
          return super.equals(obj);
        }
        packet.Chunk.ChunkData.ChunkSlice other = (packet.Chunk.ChunkData.ChunkSlice) obj;

        if (!getValuesList()
            .equals(other.getValuesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getValuesCount() > 0) {
          hash = (37 * hash) + VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getValuesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.ChunkSlice parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(packet.Chunk.ChunkData.ChunkSlice prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code packet.ChunkData.ChunkSlice}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:packet.ChunkData.ChunkSlice)
          packet.Chunk.ChunkData.ChunkSliceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return packet.Chunk.internal_static_packet_ChunkData_ChunkSlice_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return packet.Chunk.internal_static_packet_ChunkData_ChunkSlice_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  packet.Chunk.ChunkData.ChunkSlice.class, packet.Chunk.ChunkData.ChunkSlice.Builder.class);
        }

        // Construct using packet.Chunk.ChunkData.ChunkSlice.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return packet.Chunk.internal_static_packet_ChunkData_ChunkSlice_descriptor;
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.ChunkSlice getDefaultInstanceForType() {
          return packet.Chunk.ChunkData.ChunkSlice.getDefaultInstance();
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.ChunkSlice build() {
          packet.Chunk.ChunkData.ChunkSlice result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.ChunkSlice buildPartial() {
          packet.Chunk.ChunkData.ChunkSlice result = new packet.Chunk.ChunkData.ChunkSlice(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof packet.Chunk.ChunkData.ChunkSlice) {
            return mergeFrom((packet.Chunk.ChunkData.ChunkSlice)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(packet.Chunk.ChunkData.ChunkSlice other) {
          if (other == packet.Chunk.ChunkData.ChunkSlice.getDefaultInstance()) return this;
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          packet.Chunk.ChunkData.ChunkSlice parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (packet.Chunk.ChunkData.ChunkSlice) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList values_ = emptyIntList();
        private void ensureValuesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            values_ = mutableCopy(values_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated int32 values = 1;</code>
         * @return A list containing the values.
         */
        public java.util.List<java.lang.Integer>
            getValuesList() {
          return ((bitField0_ & 0x00000001) != 0) ?
                   java.util.Collections.unmodifiableList(values_) : values_;
        }
        /**
         * <code>repeated int32 values = 1;</code>
         * @return The count of values.
         */
        public int getValuesCount() {
          return values_.size();
        }
        /**
         * <code>repeated int32 values = 1;</code>
         * @param index The index of the element to return.
         * @return The values at the given index.
         */
        public int getValues(int index) {
          return values_.getInt(index);
        }
        /**
         * <code>repeated int32 values = 1;</code>
         * @param index The index to set the value at.
         * @param value The values to set.
         * @return This builder for chaining.
         */
        public Builder setValues(
            int index, int value) {
          ensureValuesIsMutable();
          values_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 values = 1;</code>
         * @param value The values to add.
         * @return This builder for chaining.
         */
        public Builder addValues(int value) {
          ensureValuesIsMutable();
          values_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 values = 1;</code>
         * @param values The values to add.
         * @return This builder for chaining.
         */
        public Builder addAllValues(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 values = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearValues() {
          values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:packet.ChunkData.ChunkSlice)
      }

      // @@protoc_insertion_point(class_scope:packet.ChunkData.ChunkSlice)
      private static final packet.Chunk.ChunkData.ChunkSlice DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new packet.Chunk.ChunkData.ChunkSlice();
      }

      public static packet.Chunk.ChunkData.ChunkSlice getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ChunkSlice>
          PARSER = new com.google.protobuf.AbstractParser<ChunkSlice>() {
        @java.lang.Override
        public ChunkSlice parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChunkSlice(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ChunkSlice> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ChunkSlice> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public packet.Chunk.ChunkData.ChunkSlice getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ChunkRowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:packet.ChunkData.ChunkRow)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      java.util.List<packet.Chunk.ChunkData.ChunkSlice> 
          getSlicesList();
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      packet.Chunk.ChunkData.ChunkSlice getSlices(int index);
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      int getSlicesCount();
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      java.util.List<? extends packet.Chunk.ChunkData.ChunkSliceOrBuilder> 
          getSlicesOrBuilderList();
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      packet.Chunk.ChunkData.ChunkSliceOrBuilder getSlicesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code packet.ChunkData.ChunkRow}
     */
    public static final class ChunkRow extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:packet.ChunkData.ChunkRow)
        ChunkRowOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ChunkRow.newBuilder() to construct.
      private ChunkRow(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ChunkRow() {
        slices_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ChunkRow();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ChunkRow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  slices_ = new java.util.ArrayList<packet.Chunk.ChunkData.ChunkSlice>();
                  mutable_bitField0_ |= 0x00000001;
                }
                slices_.add(
                    input.readMessage(packet.Chunk.ChunkData.ChunkSlice.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            slices_ = java.util.Collections.unmodifiableList(slices_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.Chunk.internal_static_packet_ChunkData_ChunkRow_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.Chunk.internal_static_packet_ChunkData_ChunkRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.Chunk.ChunkData.ChunkRow.class, packet.Chunk.ChunkData.ChunkRow.Builder.class);
      }

      public static final int SLICES_FIELD_NUMBER = 1;
      private java.util.List<packet.Chunk.ChunkData.ChunkSlice> slices_;
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      @java.lang.Override
      public java.util.List<packet.Chunk.ChunkData.ChunkSlice> getSlicesList() {
        return slices_;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends packet.Chunk.ChunkData.ChunkSliceOrBuilder> 
          getSlicesOrBuilderList() {
        return slices_;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      @java.lang.Override
      public int getSlicesCount() {
        return slices_.size();
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      @java.lang.Override
      public packet.Chunk.ChunkData.ChunkSlice getSlices(int index) {
        return slices_.get(index);
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
       */
      @java.lang.Override
      public packet.Chunk.ChunkData.ChunkSliceOrBuilder getSlicesOrBuilder(
          int index) {
        return slices_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < slices_.size(); i++) {
          output.writeMessage(1, slices_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < slices_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, slices_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof packet.Chunk.ChunkData.ChunkRow)) {
          return super.equals(obj);
        }
        packet.Chunk.ChunkData.ChunkRow other = (packet.Chunk.ChunkData.ChunkRow) obj;

        if (!getSlicesList()
            .equals(other.getSlicesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getSlicesCount() > 0) {
          hash = (37 * hash) + SLICES_FIELD_NUMBER;
          hash = (53 * hash) + getSlicesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static packet.Chunk.ChunkData.ChunkRow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(packet.Chunk.ChunkData.ChunkRow prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code packet.ChunkData.ChunkRow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:packet.ChunkData.ChunkRow)
          packet.Chunk.ChunkData.ChunkRowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return packet.Chunk.internal_static_packet_ChunkData_ChunkRow_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return packet.Chunk.internal_static_packet_ChunkData_ChunkRow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  packet.Chunk.ChunkData.ChunkRow.class, packet.Chunk.ChunkData.ChunkRow.Builder.class);
        }

        // Construct using packet.Chunk.ChunkData.ChunkRow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSlicesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (slicesBuilder_ == null) {
            slices_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            slicesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return packet.Chunk.internal_static_packet_ChunkData_ChunkRow_descriptor;
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.ChunkRow getDefaultInstanceForType() {
          return packet.Chunk.ChunkData.ChunkRow.getDefaultInstance();
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.ChunkRow build() {
          packet.Chunk.ChunkData.ChunkRow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public packet.Chunk.ChunkData.ChunkRow buildPartial() {
          packet.Chunk.ChunkData.ChunkRow result = new packet.Chunk.ChunkData.ChunkRow(this);
          int from_bitField0_ = bitField0_;
          if (slicesBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              slices_ = java.util.Collections.unmodifiableList(slices_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.slices_ = slices_;
          } else {
            result.slices_ = slicesBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof packet.Chunk.ChunkData.ChunkRow) {
            return mergeFrom((packet.Chunk.ChunkData.ChunkRow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(packet.Chunk.ChunkData.ChunkRow other) {
          if (other == packet.Chunk.ChunkData.ChunkRow.getDefaultInstance()) return this;
          if (slicesBuilder_ == null) {
            if (!other.slices_.isEmpty()) {
              if (slices_.isEmpty()) {
                slices_ = other.slices_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSlicesIsMutable();
                slices_.addAll(other.slices_);
              }
              onChanged();
            }
          } else {
            if (!other.slices_.isEmpty()) {
              if (slicesBuilder_.isEmpty()) {
                slicesBuilder_.dispose();
                slicesBuilder_ = null;
                slices_ = other.slices_;
                bitField0_ = (bitField0_ & ~0x00000001);
                slicesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSlicesFieldBuilder() : null;
              } else {
                slicesBuilder_.addAllMessages(other.slices_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          packet.Chunk.ChunkData.ChunkRow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (packet.Chunk.ChunkData.ChunkRow) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<packet.Chunk.ChunkData.ChunkSlice> slices_ =
          java.util.Collections.emptyList();
        private void ensureSlicesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            slices_ = new java.util.ArrayList<packet.Chunk.ChunkData.ChunkSlice>(slices_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            packet.Chunk.ChunkData.ChunkSlice, packet.Chunk.ChunkData.ChunkSlice.Builder, packet.Chunk.ChunkData.ChunkSliceOrBuilder> slicesBuilder_;

        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public java.util.List<packet.Chunk.ChunkData.ChunkSlice> getSlicesList() {
          if (slicesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(slices_);
          } else {
            return slicesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public int getSlicesCount() {
          if (slicesBuilder_ == null) {
            return slices_.size();
          } else {
            return slicesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public packet.Chunk.ChunkData.ChunkSlice getSlices(int index) {
          if (slicesBuilder_ == null) {
            return slices_.get(index);
          } else {
            return slicesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder setSlices(
            int index, packet.Chunk.ChunkData.ChunkSlice value) {
          if (slicesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSlicesIsMutable();
            slices_.set(index, value);
            onChanged();
          } else {
            slicesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder setSlices(
            int index, packet.Chunk.ChunkData.ChunkSlice.Builder builderForValue) {
          if (slicesBuilder_ == null) {
            ensureSlicesIsMutable();
            slices_.set(index, builderForValue.build());
            onChanged();
          } else {
            slicesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder addSlices(packet.Chunk.ChunkData.ChunkSlice value) {
          if (slicesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSlicesIsMutable();
            slices_.add(value);
            onChanged();
          } else {
            slicesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder addSlices(
            int index, packet.Chunk.ChunkData.ChunkSlice value) {
          if (slicesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSlicesIsMutable();
            slices_.add(index, value);
            onChanged();
          } else {
            slicesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder addSlices(
            packet.Chunk.ChunkData.ChunkSlice.Builder builderForValue) {
          if (slicesBuilder_ == null) {
            ensureSlicesIsMutable();
            slices_.add(builderForValue.build());
            onChanged();
          } else {
            slicesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder addSlices(
            int index, packet.Chunk.ChunkData.ChunkSlice.Builder builderForValue) {
          if (slicesBuilder_ == null) {
            ensureSlicesIsMutable();
            slices_.add(index, builderForValue.build());
            onChanged();
          } else {
            slicesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder addAllSlices(
            java.lang.Iterable<? extends packet.Chunk.ChunkData.ChunkSlice> values) {
          if (slicesBuilder_ == null) {
            ensureSlicesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, slices_);
            onChanged();
          } else {
            slicesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder clearSlices() {
          if (slicesBuilder_ == null) {
            slices_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            slicesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public Builder removeSlices(int index) {
          if (slicesBuilder_ == null) {
            ensureSlicesIsMutable();
            slices_.remove(index);
            onChanged();
          } else {
            slicesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public packet.Chunk.ChunkData.ChunkSlice.Builder getSlicesBuilder(
            int index) {
          return getSlicesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public packet.Chunk.ChunkData.ChunkSliceOrBuilder getSlicesOrBuilder(
            int index) {
          if (slicesBuilder_ == null) {
            return slices_.get(index);  } else {
            return slicesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public java.util.List<? extends packet.Chunk.ChunkData.ChunkSliceOrBuilder> 
             getSlicesOrBuilderList() {
          if (slicesBuilder_ != null) {
            return slicesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(slices_);
          }
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public packet.Chunk.ChunkData.ChunkSlice.Builder addSlicesBuilder() {
          return getSlicesFieldBuilder().addBuilder(
              packet.Chunk.ChunkData.ChunkSlice.getDefaultInstance());
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public packet.Chunk.ChunkData.ChunkSlice.Builder addSlicesBuilder(
            int index) {
          return getSlicesFieldBuilder().addBuilder(
              index, packet.Chunk.ChunkData.ChunkSlice.getDefaultInstance());
        }
        /**
         * <code>repeated .packet.ChunkData.ChunkSlice slices = 1;</code>
         */
        public java.util.List<packet.Chunk.ChunkData.ChunkSlice.Builder> 
             getSlicesBuilderList() {
          return getSlicesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            packet.Chunk.ChunkData.ChunkSlice, packet.Chunk.ChunkData.ChunkSlice.Builder, packet.Chunk.ChunkData.ChunkSliceOrBuilder> 
            getSlicesFieldBuilder() {
          if (slicesBuilder_ == null) {
            slicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                packet.Chunk.ChunkData.ChunkSlice, packet.Chunk.ChunkData.ChunkSlice.Builder, packet.Chunk.ChunkData.ChunkSliceOrBuilder>(
                    slices_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            slices_ = null;
          }
          return slicesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:packet.ChunkData.ChunkRow)
      }

      // @@protoc_insertion_point(class_scope:packet.ChunkData.ChunkRow)
      private static final packet.Chunk.ChunkData.ChunkRow DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new packet.Chunk.ChunkData.ChunkRow();
      }

      public static packet.Chunk.ChunkData.ChunkRow getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ChunkRow>
          PARSER = new com.google.protobuf.AbstractParser<ChunkRow>() {
        @java.lang.Override
        public ChunkRow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ChunkRow(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ChunkRow> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ChunkRow> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public packet.Chunk.ChunkData.ChunkRow getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int PACKETID_FIELD_NUMBER = 1;
    private int packetId_;
    /**
     * <code>int32 packetId = 1;</code>
     * @return The packetId.
     */
    @java.lang.Override
    public int getPacketId() {
      return packetId_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private packet.Chunk.ChunkData.Vector2 position_;
    /**
     * <code>.packet.ChunkData.Vector2 position = 2;</code>
     * @return Whether the position field is set.
     */
    @java.lang.Override
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <code>.packet.ChunkData.Vector2 position = 2;</code>
     * @return The position.
     */
    @java.lang.Override
    public packet.Chunk.ChunkData.Vector2 getPosition() {
      return position_ == null ? packet.Chunk.ChunkData.Vector2.getDefaultInstance() : position_;
    }
    /**
     * <code>.packet.ChunkData.Vector2 position = 2;</code>
     */
    @java.lang.Override
    public packet.Chunk.ChunkData.Vector2OrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int BIOME_FIELD_NUMBER = 3;
    private int biome_;
    /**
     * <code>int32 biome = 3;</code>
     * @return The biome.
     */
    @java.lang.Override
    public int getBiome() {
      return biome_;
    }

    public static final int CHUNK_FIELD_NUMBER = 4;
    private java.util.List<packet.Chunk.ChunkData.ChunkRow> chunk_;
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    @java.lang.Override
    public java.util.List<packet.Chunk.ChunkData.ChunkRow> getChunkList() {
      return chunk_;
    }
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends packet.Chunk.ChunkData.ChunkRowOrBuilder> 
        getChunkOrBuilderList() {
      return chunk_;
    }
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    @java.lang.Override
    public int getChunkCount() {
      return chunk_.size();
    }
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    @java.lang.Override
    public packet.Chunk.ChunkData.ChunkRow getChunk(int index) {
      return chunk_.get(index);
    }
    /**
     * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
     */
    @java.lang.Override
    public packet.Chunk.ChunkData.ChunkRowOrBuilder getChunkOrBuilder(
        int index) {
      return chunk_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (packetId_ != 0) {
        output.writeInt32(1, packetId_);
      }
      if (position_ != null) {
        output.writeMessage(2, getPosition());
      }
      if (biome_ != 0) {
        output.writeInt32(3, biome_);
      }
      for (int i = 0; i < chunk_.size(); i++) {
        output.writeMessage(4, chunk_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (packetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, packetId_);
      }
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPosition());
      }
      if (biome_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, biome_);
      }
      for (int i = 0; i < chunk_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, chunk_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof packet.Chunk.ChunkData)) {
        return super.equals(obj);
      }
      packet.Chunk.ChunkData other = (packet.Chunk.ChunkData) obj;

      if (getPacketId()
          != other.getPacketId()) return false;
      if (hasPosition() != other.hasPosition()) return false;
      if (hasPosition()) {
        if (!getPosition()
            .equals(other.getPosition())) return false;
      }
      if (getBiome()
          != other.getBiome()) return false;
      if (!getChunkList()
          .equals(other.getChunkList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PACKETID_FIELD_NUMBER;
      hash = (53 * hash) + getPacketId();
      if (hasPosition()) {
        hash = (37 * hash) + POSITION_FIELD_NUMBER;
        hash = (53 * hash) + getPosition().hashCode();
      }
      hash = (37 * hash) + BIOME_FIELD_NUMBER;
      hash = (53 * hash) + getBiome();
      if (getChunkCount() > 0) {
        hash = (37 * hash) + CHUNK_FIELD_NUMBER;
        hash = (53 * hash) + getChunkList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static packet.Chunk.ChunkData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.Chunk.ChunkData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.Chunk.ChunkData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.Chunk.ChunkData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.Chunk.ChunkData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static packet.Chunk.ChunkData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static packet.Chunk.ChunkData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static packet.Chunk.ChunkData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static packet.Chunk.ChunkData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static packet.Chunk.ChunkData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static packet.Chunk.ChunkData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static packet.Chunk.ChunkData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(packet.Chunk.ChunkData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code packet.ChunkData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:packet.ChunkData)
        packet.Chunk.ChunkDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return packet.Chunk.internal_static_packet_ChunkData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return packet.Chunk.internal_static_packet_ChunkData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                packet.Chunk.ChunkData.class, packet.Chunk.ChunkData.Builder.class);
      }

      // Construct using packet.Chunk.ChunkData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChunkFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        packetId_ = 0;

        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        biome_ = 0;

        if (chunkBuilder_ == null) {
          chunk_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          chunkBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return packet.Chunk.internal_static_packet_ChunkData_descriptor;
      }

      @java.lang.Override
      public packet.Chunk.ChunkData getDefaultInstanceForType() {
        return packet.Chunk.ChunkData.getDefaultInstance();
      }

      @java.lang.Override
      public packet.Chunk.ChunkData build() {
        packet.Chunk.ChunkData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public packet.Chunk.ChunkData buildPartial() {
        packet.Chunk.ChunkData result = new packet.Chunk.ChunkData(this);
        int from_bitField0_ = bitField0_;
        result.packetId_ = packetId_;
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.biome_ = biome_;
        if (chunkBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            chunk_ = java.util.Collections.unmodifiableList(chunk_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.chunk_ = chunk_;
        } else {
          result.chunk_ = chunkBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof packet.Chunk.ChunkData) {
          return mergeFrom((packet.Chunk.ChunkData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(packet.Chunk.ChunkData other) {
        if (other == packet.Chunk.ChunkData.getDefaultInstance()) return this;
        if (other.getPacketId() != 0) {
          setPacketId(other.getPacketId());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.getBiome() != 0) {
          setBiome(other.getBiome());
        }
        if (chunkBuilder_ == null) {
          if (!other.chunk_.isEmpty()) {
            if (chunk_.isEmpty()) {
              chunk_ = other.chunk_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChunkIsMutable();
              chunk_.addAll(other.chunk_);
            }
            onChanged();
          }
        } else {
          if (!other.chunk_.isEmpty()) {
            if (chunkBuilder_.isEmpty()) {
              chunkBuilder_.dispose();
              chunkBuilder_ = null;
              chunk_ = other.chunk_;
              bitField0_ = (bitField0_ & ~0x00000001);
              chunkBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChunkFieldBuilder() : null;
            } else {
              chunkBuilder_.addAllMessages(other.chunk_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        packet.Chunk.ChunkData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (packet.Chunk.ChunkData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int packetId_ ;
      /**
       * <code>int32 packetId = 1;</code>
       * @return The packetId.
       */
      @java.lang.Override
      public int getPacketId() {
        return packetId_;
      }
      /**
       * <code>int32 packetId = 1;</code>
       * @param value The packetId to set.
       * @return This builder for chaining.
       */
      public Builder setPacketId(int value) {
        
        packetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 packetId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPacketId() {
        
        packetId_ = 0;
        onChanged();
        return this;
      }

      private packet.Chunk.ChunkData.Vector2 position_;
      private com.google.protobuf.SingleFieldBuilderV3<
          packet.Chunk.ChunkData.Vector2, packet.Chunk.ChunkData.Vector2.Builder, packet.Chunk.ChunkData.Vector2OrBuilder> positionBuilder_;
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       * @return Whether the position field is set.
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       * @return The position.
       */
      public packet.Chunk.ChunkData.Vector2 getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? packet.Chunk.ChunkData.Vector2.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       */
      public Builder setPosition(packet.Chunk.ChunkData.Vector2 value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       */
      public Builder setPosition(
          packet.Chunk.ChunkData.Vector2.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       */
      public Builder mergePosition(packet.Chunk.ChunkData.Vector2 value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              packet.Chunk.ChunkData.Vector2.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       */
      public packet.Chunk.ChunkData.Vector2.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       */
      public packet.Chunk.ChunkData.Vector2OrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              packet.Chunk.ChunkData.Vector2.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>.packet.ChunkData.Vector2 position = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          packet.Chunk.ChunkData.Vector2, packet.Chunk.ChunkData.Vector2.Builder, packet.Chunk.ChunkData.Vector2OrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              packet.Chunk.ChunkData.Vector2, packet.Chunk.ChunkData.Vector2.Builder, packet.Chunk.ChunkData.Vector2OrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private int biome_ ;
      /**
       * <code>int32 biome = 3;</code>
       * @return The biome.
       */
      @java.lang.Override
      public int getBiome() {
        return biome_;
      }
      /**
       * <code>int32 biome = 3;</code>
       * @param value The biome to set.
       * @return This builder for chaining.
       */
      public Builder setBiome(int value) {
        
        biome_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 biome = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBiome() {
        
        biome_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<packet.Chunk.ChunkData.ChunkRow> chunk_ =
        java.util.Collections.emptyList();
      private void ensureChunkIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          chunk_ = new java.util.ArrayList<packet.Chunk.ChunkData.ChunkRow>(chunk_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          packet.Chunk.ChunkData.ChunkRow, packet.Chunk.ChunkData.ChunkRow.Builder, packet.Chunk.ChunkData.ChunkRowOrBuilder> chunkBuilder_;

      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public java.util.List<packet.Chunk.ChunkData.ChunkRow> getChunkList() {
        if (chunkBuilder_ == null) {
          return java.util.Collections.unmodifiableList(chunk_);
        } else {
          return chunkBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public int getChunkCount() {
        if (chunkBuilder_ == null) {
          return chunk_.size();
        } else {
          return chunkBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public packet.Chunk.ChunkData.ChunkRow getChunk(int index) {
        if (chunkBuilder_ == null) {
          return chunk_.get(index);
        } else {
          return chunkBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder setChunk(
          int index, packet.Chunk.ChunkData.ChunkRow value) {
        if (chunkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunkIsMutable();
          chunk_.set(index, value);
          onChanged();
        } else {
          chunkBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder setChunk(
          int index, packet.Chunk.ChunkData.ChunkRow.Builder builderForValue) {
        if (chunkBuilder_ == null) {
          ensureChunkIsMutable();
          chunk_.set(index, builderForValue.build());
          onChanged();
        } else {
          chunkBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder addChunk(packet.Chunk.ChunkData.ChunkRow value) {
        if (chunkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunkIsMutable();
          chunk_.add(value);
          onChanged();
        } else {
          chunkBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder addChunk(
          int index, packet.Chunk.ChunkData.ChunkRow value) {
        if (chunkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChunkIsMutable();
          chunk_.add(index, value);
          onChanged();
        } else {
          chunkBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder addChunk(
          packet.Chunk.ChunkData.ChunkRow.Builder builderForValue) {
        if (chunkBuilder_ == null) {
          ensureChunkIsMutable();
          chunk_.add(builderForValue.build());
          onChanged();
        } else {
          chunkBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder addChunk(
          int index, packet.Chunk.ChunkData.ChunkRow.Builder builderForValue) {
        if (chunkBuilder_ == null) {
          ensureChunkIsMutable();
          chunk_.add(index, builderForValue.build());
          onChanged();
        } else {
          chunkBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder addAllChunk(
          java.lang.Iterable<? extends packet.Chunk.ChunkData.ChunkRow> values) {
        if (chunkBuilder_ == null) {
          ensureChunkIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, chunk_);
          onChanged();
        } else {
          chunkBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder clearChunk() {
        if (chunkBuilder_ == null) {
          chunk_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          chunkBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public Builder removeChunk(int index) {
        if (chunkBuilder_ == null) {
          ensureChunkIsMutable();
          chunk_.remove(index);
          onChanged();
        } else {
          chunkBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public packet.Chunk.ChunkData.ChunkRow.Builder getChunkBuilder(
          int index) {
        return getChunkFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public packet.Chunk.ChunkData.ChunkRowOrBuilder getChunkOrBuilder(
          int index) {
        if (chunkBuilder_ == null) {
          return chunk_.get(index);  } else {
          return chunkBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public java.util.List<? extends packet.Chunk.ChunkData.ChunkRowOrBuilder> 
           getChunkOrBuilderList() {
        if (chunkBuilder_ != null) {
          return chunkBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(chunk_);
        }
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public packet.Chunk.ChunkData.ChunkRow.Builder addChunkBuilder() {
        return getChunkFieldBuilder().addBuilder(
            packet.Chunk.ChunkData.ChunkRow.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public packet.Chunk.ChunkData.ChunkRow.Builder addChunkBuilder(
          int index) {
        return getChunkFieldBuilder().addBuilder(
            index, packet.Chunk.ChunkData.ChunkRow.getDefaultInstance());
      }
      /**
       * <code>repeated .packet.ChunkData.ChunkRow chunk = 4;</code>
       */
      public java.util.List<packet.Chunk.ChunkData.ChunkRow.Builder> 
           getChunkBuilderList() {
        return getChunkFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          packet.Chunk.ChunkData.ChunkRow, packet.Chunk.ChunkData.ChunkRow.Builder, packet.Chunk.ChunkData.ChunkRowOrBuilder> 
          getChunkFieldBuilder() {
        if (chunkBuilder_ == null) {
          chunkBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              packet.Chunk.ChunkData.ChunkRow, packet.Chunk.ChunkData.ChunkRow.Builder, packet.Chunk.ChunkData.ChunkRowOrBuilder>(
                  chunk_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          chunk_ = null;
        }
        return chunkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:packet.ChunkData)
    }

    // @@protoc_insertion_point(class_scope:packet.ChunkData)
    private static final packet.Chunk.ChunkData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new packet.Chunk.ChunkData();
    }

    public static packet.Chunk.ChunkData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChunkData>
        PARSER = new com.google.protobuf.AbstractParser<ChunkData>() {
      @java.lang.Override
      public ChunkData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChunkData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChunkData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChunkData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public packet.Chunk.ChunkData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_ChunkData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_packet_ChunkData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_ChunkData_Vector2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_packet_ChunkData_Vector2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_ChunkData_ChunkSlice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_packet_ChunkData_ChunkSlice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_packet_ChunkData_ChunkRow_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_packet_ChunkData_ChunkRow_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Chunk.proto\022\006packet\"\375\001\n\tChunkData\022\020\n\010p" +
      "acketId\030\001 \001(\005\022+\n\010position\030\002 \001(\0132\031.packet" +
      ".ChunkData.Vector2\022\r\n\005biome\030\003 \001(\005\022)\n\005chu" +
      "nk\030\004 \003(\0132\032.packet.ChunkData.ChunkRow\032\037\n\007" +
      "Vector2\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\032\034\n\nChunkSl" +
      "ice\022\016\n\006values\030\001 \003(\005\0328\n\010ChunkRow\022,\n\006slice" +
      "s\030\001 \003(\0132\034.packet.ChunkData.ChunkSliceb\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_packet_ChunkData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_packet_ChunkData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_packet_ChunkData_descriptor,
        new java.lang.String[] { "PacketId", "Position", "Biome", "Chunk", });
    internal_static_packet_ChunkData_Vector2_descriptor =
      internal_static_packet_ChunkData_descriptor.getNestedTypes().get(0);
    internal_static_packet_ChunkData_Vector2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_packet_ChunkData_Vector2_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_packet_ChunkData_ChunkSlice_descriptor =
      internal_static_packet_ChunkData_descriptor.getNestedTypes().get(1);
    internal_static_packet_ChunkData_ChunkSlice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_packet_ChunkData_ChunkSlice_descriptor,
        new java.lang.String[] { "Values", });
    internal_static_packet_ChunkData_ChunkRow_descriptor =
      internal_static_packet_ChunkData_descriptor.getNestedTypes().get(2);
    internal_static_packet_ChunkData_ChunkRow_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_packet_ChunkData_ChunkRow_descriptor,
        new java.lang.String[] { "Slices", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
